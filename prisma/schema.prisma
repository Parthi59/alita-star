// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  name          String
  email         String        @unique
  password      String
  createdAt     DateTime      @default(now())
  cartItems     CartItem[]
  wishlistItems WishlistItem[]
  orders        Order[]
}

model Product {
  id          String        @id @default(uuid())
  title       String
  description String
  image       String
  price       Float
  rating      Float
  createdAt   DateTime      @default(now())
  cartItems   CartItem[]
  wishlistItems WishlistItem[]
  orderItems  OrderItem[]
}

model CartItem {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())

  @@unique([userId, productId])
}

model WishlistItem {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  createdAt DateTime @default(now())

  @@unique([userId, productId])
}

model Order {
  id        String       @id @default(uuid())
  user      User         @relation(fields: [userId], references: [id])
  userId    String
  total     Float
  status    String       @default("pending")
  createdAt DateTime     @default(now())
  orderItems OrderItem[]
}

model OrderItem {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  price     Float
}